// Code generated by go-enum DO NOT EDIT.
// Version: 0.6.0
// Revision: 919e61c0174b91303753ee3898569a01abb32c97
// Build Date: 2023-12-18T15:54:43Z
// Built By: goreleaser

package factory

import (
	"errors"
	"fmt"
	"strings"
)

const (
	WireValueSelf   WireValue = "self"
	WireValueAuto   WireValue = "auto"
	WireValueType   WireValue = "type"
	WireValueName   WireValue = "name"
	WireValueValue  WireValue = "value"
	WireValueOption WireValue = "option"
)

var ErrInvalidWireValue = errors.New("not a valid WireValue")

// WireValueValues returns a list of the values for WireValue
func WireValueValues() []WireValue {
	return []WireValue{
		WireValueSelf,
		WireValueAuto,
		WireValueType,
		WireValueName,
		WireValueValue,
		WireValueOption,
	}
}

// String implements the Stringer interface.
func (x WireValue) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x WireValue) IsValid() bool {
	_, err := ParseWireValue(string(x))
	return err == nil
}

var _WireValueValue = map[string]WireValue{
	"self":   WireValueSelf,
	"auto":   WireValueAuto,
	"type":   WireValueType,
	"name":   WireValueName,
	"value":  WireValueValue,
	"option": WireValueOption,
}

// ParseWireValue attempts to convert a string to a WireValue.
func ParseWireValue(name string) (WireValue, error) {
	if x, ok := _WireValueValue[name]; ok {
		return x, nil
	}
	// Case insensitive parse, do a separate lookup to prevent unnecessary cost of lowercasing a string if we don't need to.
	if x, ok := _WireValueValue[strings.ToLower(name)]; ok {
		return x, nil
	}
	return WireValue(""), fmt.Errorf("%s is %w", name, ErrInvalidWireValue)
}

// MarshalText implements the text marshaller method.
func (x WireValue) MarshalText() ([]byte, error) {
	return []byte(string(x)), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *WireValue) UnmarshalText(text []byte) error {
	tmp, err := ParseWireValue(string(text))
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}
